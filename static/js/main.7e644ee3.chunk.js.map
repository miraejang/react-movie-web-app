{"version":3,"sources":["assets/noPosterSmall.png","components/GlobalStyle.js","components/Nav.js","components/Header.js","api.js","components/Poster.js","components/Section.js","components/Category.js","components/Loader.js","screens/Home/HomePresenter.js","screens/Home/index.js","screens/Home/HomeContainer.js","screens/Movies/MoviesPresenter.js","screens/Movies/index.js","screens/Movies/MoviesContainer.js","screens/TV/TvPresenter.js","screens/TV/index.js","screens/TV/TVContainer.js","screens/Search/SearchPresenter.js","screens/Search/index.js","screens/Search/SearchContainer.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","require","Li","styled","li","A","Link","Nav","to","HEADER","header","Header","api","default","create","baseURL","params","api_key","language","movieApi","get","term","query","encodeURIComponent","tvApi","Item","div","Img","img","Title","h5","Year","p","Poster","title","date","src","alt","slice","SECTION","h4","Gird","Section","children","Type","h3","Category","error","movies_popular","movies_nowPlaying","movies_upcoming","movies_topRated","types","shows_popular","shows_airingToday","shows_onAir","shows_topRated","sections","map","type","section","length","movie","poster_path","original_title","release_date","Container","LOADER","Loader","className","Form","form","TypesBox","SectionsBox","InlineBox","span","CheckBox","input","Label","label","HomePresenter","loading","typeChange","sectionChange","id","name","defaultChecked","includes","onChange","htmlFor","HomeContainer","props","getMovies","a","data","results","setState","console","log","e","checked","target","item","state","push","idx","findIndex","splice","this","React","Component","MoviesPresenter","popular","nowPlaying","upcoming","topRated","MoviesContainer","componentDidMount","TVPresenter","airingToday","onAir","show","original_name","first_air_date","TVContainer","Input","SearchPresenter","searchTerm","movieResults","showResults","handdleChnage","handdleSubmit","onSubmit","value","placeholder","SearchContainer","preventDefault","searchByTerm","Main","main","App","path","exact","component","Home","Movies","TV","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e644ee3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","const { createGlobalStyle } = require('styled-components');\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody, div, ul, li, h1, h2, h3, h4, h5, h6, p {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\na {\r\n  color: inherit;\r\n  text-decoration: none;\r\n}\r\nli {\r\n  list-style: none;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: #17181b;\r\n  color: #fff;\r\n  overflow: hidden;\r\n}\r\n#root {\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  color: #fff;\r\n}\r\n\r\n.loader {\r\n  animation: rotation 5s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0 { transform: rotate(0deg); opacity: 0.5; }\r\n  25% { transform: rotate(90deg); opacity: 1; }\r\n  50% { transform: rotate(180deg); opacity: 0.5; }\r\n  75% { transform: rotate(270deg); opacity: 1; }\r\n  100% { transform: rotate(360deg); opacity: 0.5; }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Li = styled.li`\r\n  display: inline-block;\r\n`;\r\nconst A = styled(Link)`\r\n  display: block;\r\n  padding: 10px 20px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.02em;\r\n`;\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <ul>\r\n      <Li>\r\n        <A to=\"/\">Home</A>\r\n      </Li>\r\n      <Li>\r\n        <A to=\"/movies\">Movies</A>\r\n      </Li>\r\n      <Li>\r\n        <A to=\"/tv\">TV</A>\r\n      </Li>\r\n      <Li>\r\n        <A to=\"/search\">Search</A>\r\n      </Li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Nav from './Nav';\r\n\r\nconst HEADER = styled.header`\r\n  display: flex;\r\n  height: 60px;\r\n  padding: 0 10px;\r\n  background-color: #16171b;\r\n  color: #a9aaac;\r\n  z-index: 3000;\r\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 28px,\r\n    rgba(0, 0, 0, 0.22) 0px 10px 10px;\r\n  align-items: center;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HEADER>\r\n      <Nav />\r\n    </HEADER>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const { default: axios } = require('axios');\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key: 'd317c98ada26509d995e06cc0f334961',\r\n    language: 'en-US',\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  popular: () => api.get('/movie/popular'),\r\n  nowPlaying: () => api.get('/movie/now_playing'),\r\n  upcoming: () => api.get('/movie/upcoming'),\r\n  topRated: () => api.get('/movie/top_rated'),\r\n  detail: id =>\r\n    api.get(`/movie/${id}`, { params: { append_to_response: 'videos' } }),\r\n  search: term =>\r\n    api.get('/search/movie', {\r\n      params: { query: encodeURIComponent(term) },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  popular: () => api.get('/tv/popular'),\r\n  airingToday: () => api.get('/tv/airing_today'),\r\n  onAir: () => api.get('/tv/on_the_air'),\r\n  topRated: () => api.get('/tv/top_rated'),\r\n  detail: id =>\r\n    api.get(`tv/${id}`, { params: { append_to_response: 'videos' } }),\r\n  search: term =>\r\n    api.get('/search/tv', { params: { query: encodeURIComponent(term) } }),\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.div`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n`;\r\nconst Img = styled.img`\r\n  border-radius: 1em;\r\n  width: 100%;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n`;\r\nconst Title = styled.h5`\r\n  overflow: hidden;\r\n  width: 100%;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst Year = styled.p`\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  color: #4b4b4b;\r\n`;\r\n\r\nconst Poster = ({ img, title, date }) => (\r\n  <Item>\r\n    <Img\r\n      src={\r\n        img\r\n          ? `https://image.tmdb.org/t/p/w500/${img}`\r\n          : require('../assets/noPosterSmall.png').default\r\n      }\r\n      alt={`${title} poster`}\r\n    />\r\n    <Title>{title}</Title>\r\n    <Year>{date && date.slice(0, 4)}</Year>\r\n  </Item>\r\n);\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SECTION = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst Title = styled.h4`\r\n  margin-bottom: 20px;\r\n  font-size: 30px;\r\n`;\r\nconst Gird = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-gap: 30px 20px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <SECTION>\r\n    <Title>{title}</Title>\r\n    <Gird>{children}</Gird>\r\n  </SECTION>\r\n);\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Poster from './Poster';\r\nimport Section from './Section';\r\n\r\nconst Type = styled.h3`\r\n  font-size: 40px;\r\n`;\r\n\r\nconst Category = ({\r\n  error,\r\n  movies_popular,\r\n  movies_nowPlaying,\r\n  movies_upcoming,\r\n  movies_topRated,\r\n  shows_popular,\r\n  shows_airingToday,\r\n  shows_onAir,\r\n  shows_topRated,\r\n  types,\r\n  sections,\r\n}) => (\r\n  <div>\r\n    {types.map(type => (\r\n      <>\r\n        <Type>{type}</Type>\r\n        <>\r\n          {type === 'movies' &&\r\n            sections.map(section => (\r\n              <>\r\n                {section === 'popular' && movies_popular && movies_popular.length > 0 && (\r\n                  <Section title=\"Popular\">\r\n                    {movies_popular.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'nowPlaying' && movies_nowPlaying && movies_nowPlaying.length > 0 && (\r\n                  <Section title=\"nowPlaying\">\r\n                    {movies_nowPlaying.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'upcoming' && movies_upcoming && movies_upcoming.length > 0 && (\r\n                  <Section title=\"upcoming\">\r\n                    {movies_upcoming.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'topRated' && movies_topRated && movies_topRated.length > 0 && (\r\n                  <Section title=\"topRated\">\r\n                    {movies_topRated.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n              </>\r\n            ))}\r\n          {type === 'shows' &&\r\n            sections.map(section => (\r\n              <>\r\n                {section === 'popular' && movies_popular && movies_popular.length > 0 && (\r\n                  <Section title=\"Popular\">\r\n                    {movies_popular.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'nowPlaying' && movies_nowPlaying && movies_nowPlaying.length > 0 && (\r\n                  <Section title=\"nowPlaying\">\r\n                    {movies_nowPlaying.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'upcoming' && movies_upcoming && movies_upcoming.length > 0 && (\r\n                  <Section title=\"upcoming\">\r\n                    {movies_upcoming.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n                {section === 'topRated' && movies_topRated && movies_topRated.length > 0 && (\r\n                  <Section title=\"topRated\">\r\n                    {movies_topRated.map(movie => (\r\n                      <Poster img={movie.poster_path} title={movie.original_title} date={movie.release_date} />\r\n                    ))}\r\n                  </Section>\r\n                )}\r\n              </>\r\n            ))}\r\n        </>\r\n      </>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nCategory.propTypes = {\r\n  types: PropTypes.array,\r\n  sections: PropTypes.array,\r\n};\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LOADER = styled.p`\r\n  font-size: 3em;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <LOADER className=\"loader\">⏳</LOADER>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import Category from 'components/Category';\r\nimport Loader from 'components/Loader';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  border: 3px solid rgba(255, 255, 255, 0.3);\r\n`;\r\nconst TypesBox = styled.div``;\r\nconst SectionsBox = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst InlineBox = styled.span`\r\n  display: inline-block;\r\n  position: relative;\r\n  margin-right: 10px;\r\n`;\r\nconst CheckBox = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  &:checked + Label:before {\r\n    content: '✔';\r\n    color: #7ce1fb;\r\n  }\r\n`;\r\nconst Label = styled.label`\r\n  vertical-align: middle;\r\n  &:before {\r\n    content: '';\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 3px;\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    margin-right: 4px;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    vertical-align: middle;\r\n  }\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  loading,\r\n  error,\r\n  movies_popular,\r\n  movies_nowPlaying,\r\n  movies_upcoming,\r\n  movies_topRated,\r\n  shows_popular,\r\n  shows_airingToday,\r\n  shows_onAir,\r\n  shows_topRated,\r\n  types,\r\n  sections,\r\n  typeChange,\r\n  sectionChange,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <TypesBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"movies\"\r\n              name=\"movies\"\r\n              defaultChecked={types.includes('movies')}\r\n              onChange={typeChange}\r\n            />\r\n            <Label htmlFor=\"movies\">Movies</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"shows\"\r\n              name=\"shows\"\r\n              defaultChecked={types.includes('shows')}\r\n              onChange={typeChange}\r\n            />\r\n            <Label htmlFor=\"shows\">TV Shows</Label>\r\n          </InlineBox>\r\n        </TypesBox>\r\n        <SectionsBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"popular\"\r\n              name=\"popular\"\r\n              defaultChecked={sections.includes('popular')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"popular\">Popualr</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"nowPlaying\"\r\n              name=\"nowPlaying\"\r\n              defaultChecked={sections.includes('nowPlaying')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"nowPlaying\">Now Playing</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"upcoming\"\r\n              name=\"upcoming\"\r\n              defaultChecked={sections.includes('upcoming')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"upcoming\">Upcoming</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"topRated\"\r\n              name=\"topRated\"\r\n              defaultChecked={sections.includes('topRated')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"topRated\">Top Rated</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"airingToday\"\r\n              name=\"airingToday\"\r\n              defaultChecked={sections.includes('airingToday')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"airingToday\">Airing Today</Label>\r\n          </InlineBox>\r\n          <InlineBox>\r\n            <CheckBox\r\n              type=\"checkbox\"\r\n              id=\"onAir\"\r\n              name=\"onAir\"\r\n              defaultChecked={sections.includes('onAir')}\r\n              onChange={sectionChange}\r\n            />\r\n            <Label htmlFor=\"onAir\">On The Air</Label>\r\n          </InlineBox>\r\n        </SectionsBox>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Category\r\n          loading={loading}\r\n          error={error}\r\n          movies_popular={movies_popular}\r\n          movies_nowPlaying={movies_nowPlaying}\r\n          movies_upcoming={movies_upcoming}\r\n          movies_topRated={movies_topRated}\r\n          shows_popular={shows_popular}\r\n          shows_airingToday={shows_airingToday}\r\n          shows_onAir={shows_onAir}\r\n          shows_topRated={shows_topRated}\r\n          types={types}\r\n          sections={sections}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;\r\n","import { movieApi, tvApi } from 'api';\r\nimport React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\n\r\nclass HomeContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      error: null,\r\n      movies_popular: null,\r\n      movies_nowPlaying: null,\r\n      movies_upcoming: null,\r\n      movies_topRated: null,\r\n      shows_popular: null,\r\n      shows_airingToday: null,\r\n      shows_onAir: null,\r\n      shows_topRated: null,\r\n      types: ['movies'],\r\n      sections: ['popular'],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  getMovies = async () => {\r\n    try {\r\n      const {\r\n        data: { results: movies_popular },\r\n      } = await movieApi.popular();\r\n      const {\r\n        data: { results: movies_nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: movies_upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: movies_topRated },\r\n      } = await movieApi.topRated();\r\n      const {\r\n        data: { results: shows_popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: shows_airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: shows_onAir },\r\n      } = await tvApi.onAir();\r\n      const {\r\n        data: { results: shows_topRated },\r\n      } = await tvApi.topRated();\r\n      this.setState({\r\n        movies_popular,\r\n        movies_nowPlaying,\r\n        movies_upcoming,\r\n        movies_topRated,\r\n        shows_popular,\r\n        shows_airingToday,\r\n        shows_onAir,\r\n        shows_topRated,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  typeChange = e => {\r\n    const checked = e.target.checked;\r\n    const item = e.target.id;\r\n    const types = this.state.types;\r\n    if (checked) {\r\n      types.push(item);\r\n    } else {\r\n      const idx = types.findIndex(e => e === item);\r\n      types.splice(idx, 1);\r\n    }\r\n    console.log(types);\r\n    this.setState({ types });\r\n  };\r\n\r\n  sectionChange = e => {\r\n    const checked = e.target.checked;\r\n    const item = e.target.id;\r\n    const sections = this.state.sections;\r\n    if (checked) {\r\n      sections.push(item);\r\n    } else {\r\n      const idx = sections.findIndex(e => e === item);\r\n      sections.splice(idx, 1);\r\n    }\r\n    this.setState({ sections });\r\n  };\r\n\r\n  render() {\r\n    return <HomePresenter {...this.state} typeChange={this.typeChange} sectionChange={this.sectionChange} />;\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import Loader from 'components/Loader';\r\nimport Poster from 'components/Poster';\r\nimport Section from 'components/Section';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst MoviesPresenter = ({\r\n  loading,\r\n  error,\r\n  popular,\r\n  nowPlaying,\r\n  upcoming,\r\n  topRated,\r\n}) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n              img={movie.poster_path}\r\n              title={movie.original_title}\r\n              date={movie.release_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n              img={movie.poster_path}\r\n              title={movie.original_title}\r\n              date={movie.release_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming\">\r\n          {upcoming.map(movie => (\r\n            <Poster\r\n              img={movie.poster_path}\r\n              title={movie.original_title}\r\n              date={movie.release_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated\">\r\n          {topRated.map(movie => (\r\n            <Poster\r\n              img={movie.poster_path}\r\n              title={movie.original_title}\r\n              date={movie.release_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMoviesPresenter.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  popular: PropTypes.array,\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n};\r\n\r\nexport default MoviesPresenter;\r\n","import MoviesContainer from './MoviesContainer';\r\n\r\nexport default MoviesContainer;\r\n","import { movieApi } from 'api';\r\nimport React from 'react';\r\nimport MoviesPresenter from './MoviesPresenter';\r\n\r\nclass MoviesContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      error: null,\r\n      popular: null,\r\n      nowPlaying: null,\r\n      upcoming: null,\r\n      topRated: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieApi.popular();\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieApi.upcoming();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await movieApi.topRated();\r\n      this.setState({\r\n        popular,\r\n        nowPlaying,\r\n        upcoming,\r\n        topRated,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <MoviesPresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default MoviesContainer;\r\n","import Loader from 'components/Loader';\r\nimport Poster from 'components/Poster';\r\nimport Section from 'components/Section';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst TVPresenter = ({\r\n  loading,\r\n  error,\r\n  popular,\r\n  airingToday,\r\n  onAir,\r\n  topRated,\r\n}) =>\r\n  loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <>\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map(show => (\r\n            <Poster\r\n              img={show.poster_path}\r\n              title={show.original_name}\r\n              date={show.first_air_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map(show => (\r\n            <Poster\r\n              img={show.poster_path}\r\n              title={show.original_name}\r\n              date={show.first_air_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {onAir && onAir.length > 0 && (\r\n        <Section title=\"On The Air\">\r\n          {onAir.map(show => (\r\n            <Poster\r\n              img={show.poster_path}\r\n              title={show.original_name}\r\n              date={show.first_air_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated\">\r\n          {topRated.map(show => (\r\n            <Poster\r\n              img={show.poster_path}\r\n              title={show.original_name}\r\n              date={show.first_air_date}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n\r\nTVPresenter.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  onAir: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from 'api';\r\nimport React from 'react';\r\nimport TVPresenter from './TvPresenter';\r\n\r\nclass TVContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      error: null,\r\n      popular: null,\r\n      airingToday: null,\r\n      onAir: null,\r\n      topRated: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: onAir },\r\n      } = await tvApi.onAir();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      this.setState({\r\n        popular,\r\n        airingToday,\r\n        onAir,\r\n        topRated,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <TVPresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import Loader from 'components/Loader';\r\nimport Poster from 'components/Poster';\r\nimport Section from 'components/Section';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  loading,\r\n  error,\r\n  searchTerm,\r\n  movieResults,\r\n  showResults,\r\n  handdleChnage,\r\n  handdleSubmit,\r\n}) => (\r\n  <Container>\r\n    <Form onSubmit={handdleSubmit}>\r\n      <Input\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={handdleChnage}\r\n        placeholder=\"Search Movie or TV Shows...\"\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <div>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movies\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                img={movie.poster_path}\r\n                title={movie.original_title}\r\n                date={movie.release_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {showResults && showResults.length > 0 && (\r\n          <Section title=\"TV\">\r\n            {showResults.map(show => (\r\n              <Poster\r\n                img={show.poster_path}\r\n                title={show.original_name}\r\n                date={show.first_air_date}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </div>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  movieResults: PropTypes.array,\r\n  showResults: PropTypes.array,\r\n  handdleChnage: PropTypes.func,\r\n  handdleSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import { movieApi, tvApi } from 'api';\r\nimport React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\n\r\nclass SearchContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      error: null,\r\n      searchTerm: '',\r\n      movieResults: null,\r\n      showResults: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {};\r\n\r\n  handdleChnage = e => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  handdleSubmit = e => {\r\n    e.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== '') this.searchByTerm();\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    this.setState({ loading: true });\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieApi.search(searchTerm);\r\n      const {\r\n        data: { results: showResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, showResults });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SearchPresenter\r\n        {...this.state}\r\n        handdleChnage={this.handdleChnage}\r\n        handdleSubmit={this.handdleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport GlobalStyle from './GlobalStyle';\r\nimport Header from './Header';\r\nimport Home from 'screens/Home';\r\nimport Movies from 'screens/Movies';\r\nimport TV from 'screens/TV';\r\nimport Search from 'screens/Search';\r\nimport styled from 'styled-components';\r\n\r\nconst Main = styled.main`\r\n  display: flex;\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  padding: 20px;\r\n  flex-direction: column;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n        <Main>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/movies\" component={Movies} />\r\n            <Route path=\"/tv\" component={TV} />\r\n            <Route path=\"/search\" component={Search} />\r\n          </Switch>\r\n        </Main>\r\n      </Router>\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}